openapi: 3.0.3
info:
  title: 'Laravel APIs application for a travel agency'
  description: "‚óè Travel is the main unit of the project: it contains all the necessary information, like the\n                    number of days, the images, title, etc. An example is Japan: road to Wonder or Norway:\n                    the land of the ICE; "
  version: 1.0.0
servers:
  -
    url: 'http://travel-api:8000'
paths:
  /api/v1/admin/travels:
    post:
      summary: "POST Travel\nCreate a new Travel record"
      operationId: pOSTTravelCreateANewTravelRecord
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      data:
                        id: 9cd3b635-978f-43d5-b526-dd800bbdddec
                        name: 'My travel'
                        slug: my-travel
                        description: 'the second best journy'
                        number_of_days: '4'
                        number_of_nights: 3
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 9cd3b635-978f-43d5-b526-dd800bbdddec
                          name:
                            type: string
                            example: 'My travel'
                          slug:
                            type: string
                            example: my-travel
                          description:
                            type: string
                            example: 'the second best journy'
                          number_of_days:
                            type: string
                            example: '4'
                          number_of_nights:
                            type: integer
                            example: 3
                  -
                    description: ''
                    type: object
                    example:
                      message: 'The name has already been taken.'
                      errors:
                        name:
                          - 'The name has already been taken.'
                    properties:
                      message:
                        type: string
                        example: 'The name has already been taken.'
                      errors:
                        type: object
                        properties:
                          name:
                            type: array
                            example:
                              - 'The name has already been taken.'
                            items:
                              type: string
      tags:
        - 'Admin endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_public:
                  type: boolean
                  description: ''
                  example: false
                name:
                  type: string
                  description: unique
                  example: aperiam
                description:
                  type: string
                  description: ''
                  example: 'Magnam esse quasi dolor.'
                number_of_days:
                  type: integer
                  description: ''
                  example: 11
              required:
                - name
                - description
                - number_of_days
  '/api/v1/admin/travels/{travel_id}/tours':
    post:
      summary: ''
      operationId: postApiV1AdminTravelsTravel_idTours
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: animi
                starting_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-22T13:37:55'
                ending_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>starting_date</code>.'
                  example: '2030-02-19'
                price:
                  type: number
                  description: ''
                  example: 9076654.248
              required:
                - name
                - starting_date
                - ending_date
                - price
      security: []
    parameters:
      -
        in: path
        name: travel_id
        description: 'The ID of the travel.'
        example: 9cd16fbd-b2a1-4637-a48b-53ea6cb55ca1
        required: true
        schema:
          type: string
  '/api/v1/admin/travels/{travel_id}':
    put:
      summary: ''
      operationId: putApiV1AdminTravelsTravel_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_public:
                  type: boolean
                  description: ''
                  example: false
                name:
                  type: string
                  description: ''
                  example: repellendus
                description:
                  type: string
                  description: ''
                  example: 'Eligendi qui consequatur qui omnis corrupti perferendis aut.'
                number_of_days:
                  type: integer
                  description: ''
                  example: 18
              required:
                - name
                - description
                - number_of_days
      security: []
    parameters:
      -
        in: path
        name: travel_id
        description: 'The ID of the travel.'
        example: 9cd16fbd-b2a1-4637-a48b-53ea6cb55ca1
        required: true
        schema:
          type: string
  /api/v1/login:
    post:
      summary: ''
      operationId: postApiV1Login
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Auth endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: brekke.mohammed@example.net
                password:
                  type: string
                  description: ''
                  example: 'el=ym2u#T*<4/~Gc'
              required:
                - email
                - password
      security: []
  /api/v1/travels:
    get:
      summary: 'This endpoint to get public travels'
      operationId: thisEndpointToGetPublicTravels
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 9cd16fbd-b2a1-4637-a48b-53ea6cb55ca1
                      name: 'update first travel'
                      slug: first-travel
                      description: 'the second best journy'
                      number_of_days: 4
                      number_of_nights: 3
                    -
                      id: 9cd2029e-669c-4195-b1c2-06d55416bcc5
                      name: 'second travel'
                      slug: second-travel
                      description: aaaa
                      number_of_days: 5
                      number_of_nights: 4
                    -
                      id: 9cd23f94-85ea-457c-9f6d-2f3bba1f44b1
                      name: 'My new travel'
                      slug: my-new-travel
                      description: 'the second best journy'
                      number_of_days: 4
                      number_of_nights: 3
                    -
                      id: 9cd26046-273d-4bd5-b4c0-c9b2d8d028f6
                      name: 'My new travel2'
                      slug: my-new-travel2
                      description: 'the second best journy'
                      number_of_days: 4
                      number_of_nights: 3
                    -
                      id: 9cd3b635-978f-43d5-b526-dd800bbdddec
                      name: 'My travel'
                      slug: my-travel
                      description: 'the second best journy'
                      number_of_days: 4
                      number_of_nights: 3
                  links:
                    first: 'http://travel-api:8000/api/v1/travels?page=1'
                    last: 'http://travel-api:8000/api/v1/travels?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://travel-api:8000/api/v1/travels?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://travel-api:8000/api/v1/travels'
                    per_page: 15
                    to: 5
                    total: 5
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 9cd16fbd-b2a1-4637-a48b-53ea6cb55ca1
                        name: 'update first travel'
                        slug: first-travel
                        description: 'the second best journy'
                        number_of_days: 4
                        number_of_nights: 3
                      -
                        id: 9cd2029e-669c-4195-b1c2-06d55416bcc5
                        name: 'second travel'
                        slug: second-travel
                        description: aaaa
                        number_of_days: 5
                        number_of_nights: 4
                      -
                        id: 9cd23f94-85ea-457c-9f6d-2f3bba1f44b1
                        name: 'My new travel'
                        slug: my-new-travel
                        description: 'the second best journy'
                        number_of_days: 4
                        number_of_nights: 3
                      -
                        id: 9cd26046-273d-4bd5-b4c0-c9b2d8d028f6
                        name: 'My new travel2'
                        slug: my-new-travel2
                        description: 'the second best journy'
                        number_of_days: 4
                        number_of_nights: 3
                      -
                        id: 9cd3b635-978f-43d5-b526-dd800bbdddec
                        name: 'My travel'
                        slug: my-travel
                        description: 'the second best journy'
                        number_of_days: 4
                        number_of_nights: 3
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9cd16fbd-b2a1-4637-a48b-53ea6cb55ca1
                        name:
                          type: string
                          example: 'update first travel'
                        slug:
                          type: string
                          example: first-travel
                        description:
                          type: string
                          example: 'the second best journy'
                        number_of_days:
                          type: integer
                          example: 4
                        number_of_nights:
                          type: integer
                          example: 3
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://travel-api:8000/api/v1/travels?page=1'
                      last:
                        type: string
                        example: 'http://travel-api:8000/api/v1/travels?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://travel-api:8000/api/v1/travels?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://travel-api:8000/api/v1/travels'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 5
                      total:
                        type: integer
                        example: 5
      tags:
        - 'Public endpoints'
  '/api/v1/travels/{travel_slug}/tours':
    get:
      summary: ''
      operationId: getApiV1TravelsTravel_slugTours
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <title>Not Found</title>\n\n        <style>\n            /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}a{background-color:transparent}code{font-family:monospace,monospace;font-size:1em}[hidden]{display:none}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}*,:after,:before{box-sizing:border-box;border:0 solid #e2e8f0}a{color:inherit;text-decoration:inherit}code{font-family:Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}svg,video{display:block;vertical-align:middle}video{max-width:100%;height:auto}.bg-white{--bg-opacity:1;background-color:#fff;background-color:rgba(255,255,255,var(--bg-opacity))}.bg-gray-100{--bg-opacity:1;background-color:#f7fafc;background-color:rgba(247,250,252,var(--bg-opacity))}.border-gray-200{--border-opacity:1;border-color:#edf2f7;border-color:rgba(237,242,247,var(--border-opacity))}.border-gray-400{--border-opacity:1;border-color:#cbd5e0;border-color:rgba(203,213,224,var(--border-opacity))}.border-t{border-top-width:1px}.border-r{border-right-width:1px}.flex{display:flex}.grid{display:grid}.hidden{display:none}.items-center{align-items:center}.justify-center{justify-content:center}.font-semibold{font-weight:600}.h-5{height:1.25rem}.h-8{height:2rem}.h-16{height:4rem}.text-sm{font-size:.875rem}.text-lg{font-size:1.125rem}.leading-7{line-height:1.75rem}.mx-auto{margin-left:auto;margin-right:auto}.ml-1{margin-left:.25rem}.mt-2{margin-top:.5rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.mt-4{margin-top:1rem}.ml-4{margin-left:1rem}.mt-8{margin-top:2rem}.ml-12{margin-left:3rem}.-mt-px{margin-top:-1px}.max-w-xl{max-width:36rem}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.overflow-hidden{overflow:hidden}.p-6{padding:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.pt-8{padding-top:2rem}.fixed{position:fixed}.relative{position:relative}.top-0{top:0}.right-0{right:0}.shadow{box-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.text-center{text-align:center}.text-gray-200{--text-opacity:1;color:#edf2f7;color:rgba(237,242,247,var(--text-opacity))}.text-gray-300{--text-opacity:1;color:#e2e8f0;color:rgba(226,232,240,var(--text-opacity))}.text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.text-gray-500{--text-opacity:1;color:#a0aec0;color:rgba(160,174,192,var(--text-opacity))}.text-gray-600{--text-opacity:1;color:#718096;color:rgba(113,128,150,var(--text-opacity))}.text-gray-700{--text-opacity:1;color:#4a5568;color:rgba(74,85,104,var(--text-opacity))}.text-gray-900{--text-opacity:1;color:#1a202c;color:rgba(26,32,44,var(--text-opacity))}.uppercase{text-transform:uppercase}.underline{text-decoration:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.tracking-wider{letter-spacing:.05em}.w-5{width:1.25rem}.w-8{width:2rem}.w-auto{width:auto}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}@-webkit-keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@-webkit-keyframes ping{0%{transform:scale(1);opacity:1}75%,to{transform:scale(2);opacity:0}}@keyframes ping{0%{transform:scale(1);opacity:1}75%,to{transform:scale(2);opacity:0}}@-webkit-keyframes pulse{0%,to{opacity:1}50%{opacity:.5}}@keyframes pulse{0%,to{opacity:1}50%{opacity:.5}}@-webkit-keyframes bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:translateY(0);-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@keyframes bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:translateY(0);-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@media (min-width:640px){.sm\\:rounded-lg{border-radius:.5rem}.sm\\:block{display:block}.sm\\:items-center{align-items:center}.sm\\:justify-start{justify-content:flex-start}.sm\\:justify-between{justify-content:space-between}.sm\\:h-20{height:5rem}.sm\\:ml-0{margin-left:0}.sm\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\\:pt-0{padding-top:0}.sm\\:text-left{text-align:left}.sm\\:text-right{text-align:right}}@media (min-width:768px){.md\\:border-t-0{border-top-width:0}.md\\:border-l{border-left-width:1px}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\\:px-8{padding-left:2rem;padding-right:2rem}}@media (prefers-color-scheme:dark){.dark\\:bg-gray-800{--bg-opacity:1;background-color:#2d3748;background-color:rgba(45,55,72,var(--bg-opacity))}.dark\\:bg-gray-900{--bg-opacity:1;background-color:#1a202c;background-color:rgba(26,32,44,var(--bg-opacity))}.dark\\:border-gray-700{--border-opacity:1;border-color:#4a5568;border-color:rgba(74,85,104,var(--border-opacity))}.dark\\:text-white{--text-opacity:1;color:#fff;color:rgba(255,255,255,var(--text-opacity))}.dark\\:text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}}\n        </style>\n\n        <style>\n            body {\n                font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n            }\n        </style>\n    </head>\n    <body class=\"antialiased\">\n        <div class=\"relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center sm:pt-0\">\n            <div class=\"max-w-xl mx-auto sm:px-6 lg:px-8\">\n                <div class=\"flex items-center pt-8 sm:justify-start sm:pt-0\">\n                    <div class=\"px-4 text-lg text-gray-500 border-r border-gray-400 tracking-wider\">\n                        404                    </div>\n\n                    <div class=\"ml-4 text-lg text-gray-500 uppercase tracking-wider\">\n                        Not Found                    </div>\n                </div>\n            </div>\n        </div>\n    </body>\n</html>\n"
      tags:
        - 'Public endpoints'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                priceFrom:
                  type: number
                  description: 'Must be at least 0.'
                  example: 5
                priceTo:
                  type: number
                  description: 'Must be at least 0.'
                  example: 57
                dateFrom:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-22T13:37:55'
                dateTo:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-22T13:37:55'
                sortOrder:
                  type: string
                  description: ''
                  example: asc
                  enum:
                    - asc
                    - desc
                sortBy:
                  type: string
                  description: ''
                  example: price
                  enum:
                    - price
    parameters:
      -
        in: path
        name: travel_slug
        description: 'The slug of the travel.'
        example: 9cd16fbd-b2a1-4637-a48b-53ea6cb55ca1
        required: true
        schema:
          type: string
tags:
  -
    name: 'Admin endpoints'
    description: ''
  -
    name: 'Auth endpoints'
    description: ''
  -
    name: 'Public endpoints'
    description: ''
